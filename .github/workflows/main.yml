name: Build binaries

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301

    - name: Build Windows binary
      run: dotnet publish --runtime win-x64 --configuration Release --output artifacts/win-x64 /p:PublishSingleFile=true Floofbot/Floofbot.csproj
    - run: zip -j artifacts/win-x64/Floofbot_win-x64.zip artifacts/win-x64/Floofbot.exe
    - uses: actions/upload-artifact@v2
      with:
        path: artifacts/win-x64/Floofbot_win-x64.zip
    
    - name: Build Linux binary (full)
      run: dotnet publish --runtime linux-x64 --configuration Release --output artifacts/linux-x64 /p:PublishSingleFile=true Floofbot/Floofbot.csproj
    - run: tar -czf artifacts/linux-x64/Floofbot_linux-x64.tar.gz -C artifacts/linux-x64 Floofbot
    - uses: actions/upload-artifact@v2
      with:
        path: artifacts/linux-x64/Floofbot_linux-x64.tar.gz

    - name: Build Linux binary (musl)
      run: dotnet publish --runtime linux-musl-x64 --configuration Release --output artifacts/linux-musl-x64 /p:PublishSingleFile=true Floofbot/Floofbot.csproj
    - run: tar -czf artifacts/linux-musl-x64/Floofbot_linux-musl-x64.tar.gz -C artifacts/linux-musl-x64 Floofbot
    - uses: actions/upload-artifact@v2
      with:
        path: artifacts/linux-musl-x64/Floofbot_linux-musl-x64.tar.gz
        
    - name: Upload sample config
      uses: actions/upload-artifact@v2
      with:
        path: Floofbot/app.config.sample
